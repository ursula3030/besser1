server {
    listen 80;
    listen [::]:80;
    server_name mail.localstreaming.example.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name mail.localstreaming.example.com;

    root /var/www/web;
    autoindex on;

    ssl_certificate /root/localstreaming.example.com+4.pem;
    ssl_certificate_key /root/localstreaming.example.com+4-key.pem;

    add_header Strict-Transport-Security max-age=15768000;
    index index.php video1.html video2.html video3.html index.html index.htm index.cgi index.pl index.xhtml standard_index.html;

    location ~ /\. {
        deny all;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.html$ {
        root /var/www/web;
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors on;
    }

    location /stat {
        rtmp_stat all;
        rtmp_stat_stylesheet stat.xsl;
        add_header Refresh "8; $request_uri";
    }

    location /stat.xsl {
        root /var/www/web;
    }

    location /control {
        rtmp_control all;
    }

    location /keys {
        root /mnt/livestream;
        autoindex off;
    }

    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
    }

    location /hls {
        alias /mnt/livestream/hls;
        autoindex on;
        expires -1;

        # CORS + MIME
        add_header Cache-Control no-cache;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With' always;
        default_type application/vnd.apple.mpegurl;

        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With';
            add_header Content-Length 0;
            return 204;
        }
    }

    location /dash {
        alias /mnt/livestream/dash;
        autoindex on;
        expires -1;

        add_header Cache-Control no-cache;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With' always;
        default_type application/dash+xml;

        types {
            application/dash+xml mpd;
            video/mp4 mp4;
        }

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With';
            add_header Content-Length 0;
            return 204;
        }
    }
}
