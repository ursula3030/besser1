server {
    listen 80;
    listen [::]:80;
    server_name mail.jitsi1.example.com;

    # Weiterleitung von HTTP zu HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mail.jitsi1.example.com;

    # SSL Konfiguration
    ssl_certificate /local/certs/jitsi1.example.com+4.pem;
    ssl_certificate_key /local/certs/jitsi1.example.com+4-key.pem;

    # Optional: Falls dein Zertifikat eine separate Chain braucht
    # ssl_trusted_certificate /local/certs/jitsi1.example.com+4.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # Root für React Build
    root /var/www/streaming-frontend/build;
    index index.html;

    # CORS Header hinzufügen, um Cross-Origin-Anfragen zu ermöglichen
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With';

    # Location für HLS-Dateien (.m3u8 und .ts)
    location ~* \.m3u8$ {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With';
        root /var/www/streaming-frontend/hls;
        try_files $uri =404;
    }

    location ~* \.ts$ {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Origin, Content-Type, X-Requested-With';
        root /var/www/streaming-frontend/hls;
        try_files $uri =404;
    }

    # Wichtig: try_files innerhalb von location /
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy für API-Aufrufe an das Backend
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Optional: Weiterleitung von statischen Assets im Falle von Fehlern
    location /static/ {
        root /var/www/streaming-frontend/build;
    }
}
